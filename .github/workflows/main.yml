# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    - name: Install build dependencies from the repos
      run: |
        echo Installing build dependencies
        sudo apt-get update
        sudo apt-get -y install pandoc highlight make

    # Fixup for old highlight that doesn't have a TOML syntax definition
    - name: Install TOML syntax definition for highlight
      run: |
        sudo cp scripts/toml.lang /usr/share/highlight/langDefs/

    - name: Install soupault
      env:
        SOUPAULT_VERSION: 5.0.0
      run: |
        echo Downloading and unpacking soupault
        # I use self-hosted URL here to make it easier to try pre-release versions in the CI
        wget https://files.baturin.org/software/soupault/$SOUPAULT_VERSION/soupault-$SOUPAULT_VERSION-linux-x86_64.tar.gz
        tar xvf soupault-$SOUPAULT_VERSION-linux-x86_64.tar.gz
        sudo mv -v ./soupault-$SOUPAULT_VERSION-linux-x86_64/soupault /usr/bin/

    - name: Build the site
      run: |
        make all
        zip -r soupault-website.zip build/

    - name: Deploy to Netlify
      env:
        NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
      run: |
        curl --fail --show-error -H "Content-Type: application/zip" -H "Authorization: Bearer $NETLIFY_TOKEN" --data-binary "@soupault-website.zip" https://api.netlify.com/api/v1/sites/soupault.netlify.app/deploys

